server:
  port: 8080
spring:
  application:
    name: "AuthMicroservice"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "https://idp.example.com/issuer"
          client-id: "myclientid"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://localhost:9000"
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
jwt:
  json-exp-roles: "/roles"
  secret-base64: "q2Tt7cQ7Yb1j0x8C6q1r3kCw9UYw1QmV1wq3x8iWg0c1m6rKzG3mZw=="
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"

adapters:
  r2dbc:
    host: "localhost"
    port: 5432
    database: "ms_auth"
    schema: "public"
    username: "postgres"
    password: "admin123"